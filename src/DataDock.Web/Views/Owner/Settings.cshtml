@model DataDock.Web.ViewModels.DashboardViewModel
@{
  ViewData["Title"] = Model.SelectedOwnerId + " Settings";
}

<div class="ui container">
  @await Component.InvokeAsync("DashboardMenu", new { selectedOwnerId = Model.SelectedOwnerId, selectedRepoId = Model.SelectedRepoId, area = Model.Area })
  <div class="ui divider"></div>
</div>

<h2>Settings for @Model.SelectedOwnerId</h2>


@if (!string.IsNullOrEmpty(ViewBag.StatusMessage))
{
  <div class="ui container">
    <div class="ui info message"><i class="info icon"></i>@Html.Raw(@ViewBag.StatusMessage)</div>
  </div>
}

<div class="ui container">
  <form asp-action="Settings" asp-controller="Owner" class="ui form">
    @await Component.InvokeAsync("Settings", new { selectedOwnerId = Model.SelectedOwnerId, selectedRepoId = Model.SelectedRepoId })

    <div class="ui center aligned container">
      <input type="submit" class="ui primary button large" value="Save" />
      <div class="ui hidden divider"></div>

    </div>

  </form>

</div>