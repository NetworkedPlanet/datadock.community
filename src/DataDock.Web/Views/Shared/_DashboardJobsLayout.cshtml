@model DataDock.Web.ViewModels.DashboardViewModel
@{
  Layout = "~/Views/Shared/_Layout.cshtml";
  Model.Title = Model.SelectedOwnerId + " " + Model.SelectedRepoId;
}


<div class="ui container">
  @await Component.InvokeAsync("DashboardMenu", new { selectedOwnerId = Model.SelectedOwnerId, selectedRepoId = Model.SelectedRepoId, area = Model.Area })
</div>

<h2>@Model.Title</h2>

@RenderBody()

@section Scripts {

  <environment names="Development">
    <script src="~/vendor/signalr/jquery.signalR-2.2.2.js"></script>
  </environment>
  <environment names="Staging,Production">
    <script src="~/vendor/signalr/jquery.signalR-2.2.2.min.js"></script>
  </environment>
  <script src="~/signalr/hubs"></script>
  <script>
    $(function () {
      var dd = $.connection.ProgressNotifier;
      dd.client.progressUpdated = function (userId, jobId, progressMessage) {
        var m = $('#' + jobId + ' > .processing-messages');
        m.removeClass('hidden')
          .append($('<div/>').html(progressMessage))
          .scrollTop(m.prop('scrollHeight'));
      }
      dd.client.statusUpdated = function (userId, jobId, jobStatus) {
        $('#' + jobId + ' .job-status')
          .html(getJobStatusText(jobStatus));
        $('#' + jobId)
          .removeClass('positive negative info warning')
          .addClass(getJobStatusClass(jobStatus));
      }
      dd.client.logUpdated = function (userId, jobId, logLink) {
        $('#' + jobId + ' .log-link').append($("<a/>").attr('href', logLink).html('Download full log'));
        var dsUrl = $('#' + jobId + ' p#iri').text();
        var dsLink = $("<a />",
          {
            href: dsUrl,
            text: dsUrl,
            'style': 'font-weight:bold;'
          });
        $('#' + jobId + ' p#iri').text().append(dsLink);
      }
      $.connection.hub.logging = true;
      $.connection.hub.start();
    });

    function htmlEncode(value) {
      var encodedValue = $('<div/>').text(value).html();
      return encodedValue;
    }

    function getJobStatusText(statusCode) {
      switch (statusCode) {
        case 0:
          return "Queued";
        case 1:
          return "Running";
        case 2:
          return "Completed";
        case 3:
          return "Failed";
        default:
          return "--";
      }
    }

    function getJobStatusClass(statusCode) {
      switch (statusCode) {
        case 0:
          return "info";
        case 1:
          return "warning";
        case 2:
          return "positive";
        case 3:
          return "negative";
        default:
          return "info";
      }
    }
  </script>
}
